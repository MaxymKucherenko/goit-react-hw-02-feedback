{"version":3,"sources":["Components/buttons/Buttons.js","Components/SectionTitle/SectionTitle.js","Components/Statistics/statistics.js","Components/SectionTitle/Notification.js","Components/buttons/Feedback.js","App.js","reportWebVitals.js","index.js","Components/Statistics/statistics.module.css"],"names":["Controls","GoodIncrement","NeutralIncrement","BadIncrement","className","type","onClick","Section","title","children","Statistics","Good","Neutral","Bad","Total","PosistiveFeedback","styles","span","Notification","message","Feedback","state","setState","prevState","total","Object","values","this","reduce","item","acc","percent","Math","round","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qOAgBeA,EAdE,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,iBAAkBC,EAApC,EAAoCA,aAApC,OACf,sBAAKC,UAAU,UAAf,UACE,wBAAQC,KAAK,SAASC,QAASL,EAA/B,kBAGA,wBAAQI,KAAK,SAASC,QAASJ,EAA/B,qBAGA,wBAAQG,KAAK,SAASC,QAASH,EAA/B,qBCDWI,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,qCACE,oBAAIL,UAAU,QAAd,SAAuBI,IACtBC,M,gBCQUC,EAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,kBAA9B,OACjB,sBAAKX,UAAU,aAAf,UACE,uBAAMA,UAAWY,IAAOC,KAAxB,mBAAqCN,KACrC,uBAAMP,UAAWY,IAAOC,KAAxB,sBAAwCL,KACxC,uBAAMR,UAAWY,IAAOC,KAAxB,kBAAoCJ,KACpC,uBAAMT,UAAWY,IAAOC,KAAxB,oBAAsCH,KACtC,uBAAMV,UAAWY,IAAOC,KAAxB,iCAAmDF,EAAnD,YCHWG,EAHM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,mBAAGf,UAAU,UAAb,SAAwBe,KC4DbC,E,4MAzDbC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPZ,cAAgB,WACd,EAAKqB,UAAS,SAACC,GAAD,MAAgB,CAC5BZ,KAAMY,EAAUZ,KAAO,O,EAG3BT,iBAAmB,WACjB,EAAKoB,UAAS,SAACC,GAAD,MAAgB,CAC5BX,QAASW,EAAUX,QAAU,O,EAGjCT,aAAe,WACb,EAAKmB,UAAS,SAACC,GAAD,MAAgB,CAC5BV,IAAKU,EAAUV,IAAM,O,4CAM3B,WACI,IAAMW,EAAQC,OAAOC,OAAOC,KAAKN,OAAOO,QAAO,SAACC,EAAMC,GACpD,OAAQA,EAAOD,IACd,GACGE,EAAUC,KAAKC,MAAMN,KAAKN,MAAMV,KAAOa,EAAQ,KACrD,OACE,sBAAKpB,UAAU,WAAf,UACE,cAAC,EAAD,CACEH,cAAe0B,KAAK1B,cACpBC,iBAAkByB,KAAKzB,iBACvBC,aAAcwB,KAAKxB,eAGrB,cAAC,EAAD,CAASK,MAAM,aAAf,SACGgB,EAAQ,EACP,cAAC,EAAD,CACEb,KAAMgB,KAAKN,MAAMV,KACjBC,QAASe,KAAKN,MAAMT,QACpBC,IAAKc,KAAKN,MAAMR,IAChBC,MAAOU,EACPT,kBAAmBgB,IAGrB,cAAC,EAAD,CAAcZ,QAAQ,+B,GAhDXe,IAAMC,W,MCWdC,MAbf,WACE,OACE,sBAAKhC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,wDAEF,qBAAKA,UAAU,UAAf,SACE,cAAC,EAAD,UCCOiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,KAAO,4B","file":"static/js/main.d161f542.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Controls = ({ GoodIncrement, NeutralIncrement, BadIncrement }) => (\r\n  <div className=\"Buttons\">\r\n    <button type=\"button\" onClick={GoodIncrement}>\r\n      Good\r\n    </button>\r\n    <button type=\"button\" onClick={NeutralIncrement}>\r\n      Neutral\r\n    </button>\r\n    <button type=\"button\" onClick={BadIncrement}>\r\n      Bad\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default Controls;","import React from \"react\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <>\r\n    <h3 className='title'>{title}</h3>\r\n    {children}\r\n  </>\r\n);\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styles from './statistics.module.css'\r\n\r\nconst Statistics = ({ Good, Neutral, Bad, Total, PosistiveFeedback }) => (\r\n  <div className=\"Statistics\">\r\n    <span className={styles.span}>Good: {Good}</span>\r\n    <span className={styles.span}>Neutral: {Neutral}</span>\r\n    <span className={styles.span}>Bad: {Bad}</span>\r\n    <span className={styles.span}>Total: {Total}</span>\r\n    <span className={styles.span}>Posistive feedback: {PosistiveFeedback} %</span>\r\n  </div>\r\n);\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\n\r\n\r\nconst Notification = ({ message }) =>\r\n    <p className='message'>{message}</p>;\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport Controls from \"./Buttons\";\r\nimport Section from \"../SectionTitle/SectionTitle\";\r\nimport Statistics from \"../Statistics/statistics\";\r\nimport Notification from \"../SectionTitle/Notification\";\r\n\r\nclass Feedback extends React.Component {\r\n  state = {\r\n    Good: 0,\r\n    Neutral: 0,\r\n    Bad: 0,\r\n  };\r\n\r\n  GoodIncrement = () => {\r\n    this.setState((prevState) => ({\r\n      Good: prevState.Good + 1,\r\n    }));\r\n  };\r\n  NeutralIncrement = () => {\r\n    this.setState((prevState) => ({\r\n      Neutral: prevState.Neutral + 1,\r\n    }));\r\n  };\r\n  BadIncrement = () => {\r\n    this.setState((prevState) => ({\r\n      Bad: prevState.Bad + 1,\r\n    }));\r\n  };\r\n\r\n\r\n\r\nrender() {\r\n    const total = Object.values(this.state).reduce((item, acc) => {\r\n      return (acc += item);\r\n    }, 0);\r\n    const percent = Math.round(this.state.Good / total * 100);\r\n    return (\r\n      <div className=\"Feedback\">\r\n        <Controls\r\n          GoodIncrement={this.GoodIncrement}\r\n          NeutralIncrement={this.NeutralIncrement}\r\n          BadIncrement={this.BadIncrement}\r\n        />\r\n\r\n        <Section title=\"Statistics\">\r\n          {total > 0 ? (\r\n            <Statistics\r\n              Good={this.state.Good}\r\n              Neutral={this.state.Neutral}\r\n              Bad={this.state.Bad}\r\n              Total={total}\r\n              PosistiveFeedback={percent}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Feedback;\r\n","import React from \"react\";\nimport Feedback from \"./Components/buttons/Feedback\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>Please leave feedback</p>\n      </header>\n      <div className=\"Buttons\">\n        <Feedback />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"statistics_span__3BP8d\"};"],"sourceRoot":""}